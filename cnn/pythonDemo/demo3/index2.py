import numpy as np
a=np.array([1,2,3,4])
print(a)#[1 2 3 4]
print(np.ndim(a))#获取numpy数组是几维，这里打印1
print(a.shape)#获取numpy数组的形状，这里我们知道，a是一个一维数组，且该数组是由4个元素组成，这里打印(4,)，
print(a.shape[0])#4，表示这个numpy数组的第一维（从0开始），有4个元素
b=np.array([[1,2],[3,4],[5,6]])
print(b)
'''
打印：
[[1 2]
 [3 4]
 [5 6]]
'''
print(np.ndim(b))#2
print(b.shape)#形状(3, 2)，表示这个numpy数组的第一维，有3个元素。然后这个numpy数组的第二维有两个元素，可以抽象成三行两列
print(b.shape[0])#3
print(b.shape[1])#2
'''
这里需要特意记一下
shape获取的是numpy数组的形状
上面那个一维数组输出的（4，），说的是这个这个numpy数组的第一维有4个元素
而上面那个二维数组输出的(3, 2)。是因为二维数组有两个维度，这个3和2分别代表，这个二维数组的第一维，有3个元素。这个二维数组的第二维有2个元素
如果抽象成行和列思考时，二维数组还好，一维数组就会产生疑问，所有这里需要特殊记忆一下
但是真实情况下，鄙人除了一维数组，思考二维数组时，还是按照行跟列来思考的，嘻嘻
'''

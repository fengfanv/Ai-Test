import numpy as np

a = np.arange(0,16,1)
print(a)
# [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]

# 关于reshape 里 -1 的相关操作

# arr.shape # (a,b)
# arr.reshape(m,-1) #改变维度为m行、d列 （-1表示列数自动计算，d=a*b/m ）（reshape(m,-1)即行数固定，列数需要计算）
# arr.reshape(-1,m) #改变维度为d行、m列 （-1表示行数自动计算，d=a*b/m ）（reshape(-1,m)即列数固定，行数需要计算）
# 自动计算d，d=数组或者矩阵里面所有的元素个数/c，注意求出来的d必须是整数，d如果是小数，则报错

# print(a.reshape(-1))
'''
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]
'''

# print(a.reshape(4,-1)) # 将数组变成4行的格式，列数自动计算的(c=4, d=16/4=4)
'''
[[ 0  1  2  3]
 [ 4  5  6  7]
 [ 8  9 10 11]
 [12 13 14 15]]
'''

# print(a.reshape(8,-1)) # 将数组变成8行的格式，列数自动计算的(c=8, d=16/8=2)
'''
[[ 0  1]
 [ 2  3]
 [ 4  5]
 [ 6  7]
 [ 8  9]
 [10 11]
 [12 13]
 [14 15]]
'''

# print(a.reshape(10,-1)) #将数组变成10行的格式，列数自动计算的(c=10, d=16/10=1.6)，这里计算出来的 d 不是整数，是小数，所以报错

print(a.reshape(4,-1))
'''
[[ 0  1  2  3]
 [ 4  5  6  7]
 [ 8  9 10 11]
 [12 13 14 15]]
'''

print(a.reshape(-1,4))
'''
[[ 0  1  2  3]
 [ 4  5  6  7]
 [ 8  9 10 11]
 [12 13 14 15]]
'''

print(a.reshape(2,-1,4))
'''
[[[ 0  1  2  3]
  [ 4  5  6  7]]

 [[ 8  9 10 11]
  [12 13 14 15]]]
'''

print(a.reshape(-1,2,4))
'''
[[[ 0  1  2  3]
  [ 4  5  6  7]]

 [[ 8  9 10 11]
  [12 13 14 15]]]
'''







import numpy as np

# 两个数组的点积运算方法（numpy.dot）

# print(help(np.dot))



# 情况1（两边都是 数字）
# print(np.dot(2,3)) #2*3=6


# 情况2（两边有一边是数字，另一边是数组）
# a = np.array([
#     [
#         [1, 2, 3],
#         [4, 5, 6]
#     ],
#     [
#         [1, 2, 3],
#         [4, 5, 6]
#     ]
# ])
# print(a.shape) # (2, 2, 3)
# result = np.dot(2, a)
# print(result.shape) # (2, 2, 3)
# print(result)
# '''
# [[[ 2  4  6]
#   [ 8 10 12]]

#  [[ 2  4  6]
#   [ 8 10 12]]]
# '''
# result2 = np.dot(a, 2)
# print(result2.shape) # (2, 2, 3)
# print(result2)
# '''
# [[[ 2  4  6]
#   [ 8 10 12]]

#  [[ 2  4  6]
#   [ 8 10 12]]]
# '''

# 以上无难度，执行的是乘法，没有进行点积运算 --------------------------------

#情况3（两数组都是1维）
# a = np.array([1,2,3])
# b = np.array([1,2,3])
# c = np.array([1,2,3,4])

# print(np.dot(a,b)) # 14 = 1*1+2*2+3*3

# print(np.dot(a,c)) # 报错

# 以上无难度， 点积运算---------------------------------------------------

# 情况4（书上的内容）（两个数组中，最低维，是1维）
# a = np.array([1, 2, 3])
# b = np.array([
#     [1, 2],
#     [1, 2],
#     [1, 2]
# ])
# b1 = np.array([
#     [
#         [
#             [1, 2],
#             [1, 2],
#             [1, 2]
#         ],
#         [
#             [1, 2],
#             [1, 2],
#             [1, 2]
#         ]
#     ],
#     [
#         [
#             [1, 2],
#             [1, 2],
#             [1, 2]
#         ],
#         [
#             [1, 2],
#             [1, 2],
#             [1, 2]
#         ]
#     ]
# ])
# c = np.array([
#     [1, 1, 1],
#     [2, 2, 2],
# ])
# c1 = np.array([
#     [
#         [
#             [
#                 [1, 1, 1],
#                 [2, 2, 2],
#             ]
#         ]
#     ],
#     [
#         [
#             [
#                 [1, 1, 1],
#                 [2, 2, 2],
#             ]
#         ]
#     ]
# ])

# a_b
# print(a.shape) # (3,)
# print(b.shape) # (3, 2)
# a_b = np.dot(a,b)
# print(a_b.shape) # (2,)
# print(a_b)
# [6 12]
# 1*1+1*2+1*3=6
# 2*1+2*2+2*3=12

# b_a
# b_a = np.dot(b,a) # 报错

# c_a
# print(c.shape) # (2, 3)
# print(a.shape) # (3,)
# c_a = np.dot(c, a)
# print(c_a.shape) # (2,)
# print(c_a)
# [6 12]
# 1*1+1*2+1*3=6
# 2*1+2*2+2*3=12

# a_b1
# print(a.shape) # (3,)
# print(b1.shape) # (2, 2, 3, 2)
# a_b1 = np.dot(a, b1)
# print(a_b1.shape) # (2, 2, 2)
# print(a_b1)
# [[[ 6 12]
#   [ 6 12]]

#  [[ 6 12]
#   [ 6 12]]]

# c1_a
# print(c1.shape) # (2, 1, 1, 2, 3)
# print(a.shape) # (3,)
# c1_a = np.dot(c1, a)
# print(c1_a.shape) # (2, 1, 1, 2)
# print(c1_a)
# [[[[ 6 12]]]


#  [[[ 6 12]]]]


# 情况5（书上的内容）（两个数组中，最低维，是2维）
# a = np.array([
#     [1, 2, 3],
#     [4, 5, 6],
# ])
# a1 = np.array([
#     [
#         [
#             [1, 2, 3],
#             [4, 5, 6],
#         ],
#         [
#             [7, 8, 9],
#             [10, 11, 12],
#         ]
#     ],
#     [
#         [
#             [1, 2, 3],
#             [4, 5, 6],
#         ],
#         [
#             [7, 8, 9],
#             [10, 11, 12],
#         ]
#     ]
# ])
# a2 = np.array([
#     [
#         [
#             [1, 2, 3],
#         ],
#         [
#             [4, 5, 6],
#         ]
#     ],
#     [
#         [
#             [1, 2, 3],
#         ],
#         [
#             [4, 5, 6],
#         ]
#     ]
# ])
# b = np.array([
#     [1, 2],
#     [3, 4],
#     [5, 6]
# ])
# b1 = np.array([
#     [
#         [1, 2],
#         [3, 4],
#         [5, 6]
#     ],
#     [
#         [1, 2],
#         [3, 4],
#         [5, 6]
#     ]
# ])
# b2 = np.array([
#     [
#         [1],
#         [2],
#         [3]
#     ],
#     [
#         [4],
#         [5],
#         [6]
#     ]
# ])
# c = np.array([
#     [
#         [1, 2],
#         [3, 4],
#     ],
#     [
#         [1, 2],
#         [3, 4],
#     ]
# ])

# a_b
# print(a.shape) # (2, 3)
# print(b.shape) # (3, 2)
# a_b = np.dot(a,b)
# print(a_b.shape) # (2, 2)
# print(a_b)
# [[22 28]
#  [49 64]]

# b_a
# print(b.shape) # (3, 2)
# print(a.shape) # (2, 3)
# b_a = np.dot(b,a)
# print(b_a.shape) # (3, 3)
# print(b_a)
# [[ 9 12 15]
#  [19 26 33]
#  [29 40 51]]

# a1_b
# print(a1.shape) # (2, 2, 2, 3)
# print(b.shape) # (3, 2)
# a1_b = np.dot(a1, b)
# print(a1_b.shape) # (2, 2, 2, 2)
# print(a1_b)
# [[[[ 22  28]
#    [ 49  64]]

#   [[ 76 100]
#    [103 136]]]


#  [[[ 22  28]
#    [ 49  64]]

#   [[ 76 100]
#    [103 136]]]]

# a_b1
# print(a.shape) # (2, 3)
# print(b1.shape) # (2, 3, 2)
# a_b1 = np.dot(a, b1)
# print(a_b1.shape) # (2, 2, 2)
# print(a_b1)
# [[[22 28]
#   [22 28]]

#  [[49 64]
#   [49 64]]]

# a_c
# print(a.shape) # (2, 3)
# print(c.shape) # (2, 2, 2)
# print(np.dot(a,c)) # 报错

# a2_b
# print(a2.shape) # (2, 2, 1, 3)
# print(b.shape) # (3, 2)
# a2_b = np.dot(a2, b)
# print(a2_b.shape) # (2, 2, 1, 2)
# print(a2_b)
# [[[[22 28]]

#   [[49 64]]]


#  [[[22 28]]

#   [[49 64]]]]

# a_b2
# print(a.shape) # (2, 3)
# print(b2.shape) # (2, 3, 1)
# a_b2 = np.dot(a,b2)
# print(a_b2.shape) # (2, 2, 1)
# print(a_b2)
# [[[14]
#   [32]]

#  [[32]
#   [77]]]
# 14 = 1*1+2*2+3*3
# 32 = 4*1+5*2+6*3
# 32 = 1*4+2*5+3*6
# 77 = 4*4+5*5+6*6

# 以上稍稍有点难度，但结合书本一起看，没什么大问题---------------------------------

# 情况6（两个数组中，最低维，是3维）
# a = np.array([
#     [
#         [1, 2, 3],
#         [4, 5, 6],
#     ],
#     [
#         [7, 8, 9],
#         [10, 11, 12],
#     ],
# ])
# a1 = np.array([
#     [
#         [
#             [1, 2, 3],
#             [4, 5, 6],
#         ],
#         [
#             [7, 8, 9],
#             [10, 11, 12],
#         ],
#     ],
#     [
#         [
#             [1, 2, 3],
#             [4, 5, 6],
#         ],
#         [
#             [7, 8, 9],
#             [10, 11, 12],
#         ],
#     ],
# ])
# a2 = np.array([
#     [
#         [1, 2, 3],
#         [4, 5, 6],
#     ],
# ])
# a3 = np.array([
#     [
#         [1, 2, 3],
        
#     ],
#     [
#         [4, 5, 6],
#     ],
#     [
#         [7, 8, 9],
#     ]
# ])
# b = np.array([
#     [
#         [1, 1],
#         [2, 2],
#         [3, 3],
#     ],
#     [
#         [4, 4],
#         [5, 5],
#         [6, 6],
#     ],
# ])
# b1 = np.array([
#     [
#         [
#             [1, 1],
#             [2, 2],
#             [3, 3],
#         ],
#         [
#             [4, 4],
#             [5, 5],
#             [6, 6],
#         ],
#     ],
#     [
#         [
#             [1, 1],
#             [2, 2],
#             [3, 3],
#         ],
#         [
#             [4, 4],
#             [5, 5],
#             [6, 6],
#         ],
#     ],
#     [
#         [
#             [1, 1],
#             [2, 2],
#             [3, 3],
#         ],
#         [
#             [4, 4],
#             [5, 5],
#             [6, 6],
#         ],
#     ]
# ])

# a_b
# print(a.shape) # (2, 2, 3)
# print(b.shape) # (2, 3, 2)
# a_b = np.dot(a,b)
# print(a_b.shape) # (2, 2, 2, 2)
# print(a_b)
# [[[[ 14  14]
#    [ 32  32]]
#   [[ 32  32]
#    [ 77  77]]]

#  [[[ 50  50]
#    [122 122]]
#   [[ 68  68]
#    [167 167]]]]
# 1*1+2*2+3*3=14
# 1*1+2*2+3*3=14
# 4*1+5*2+6*3=32
# 4*1+5*2+6*3=32

# 1*4+2*5+3*6=32
# 1*4+2*5+3*6=32
# 4*4+5*5+6*6=77
# 4*4+5*5+6*6=77

# 7*1+8*2+9*3=50
# 7*1+8*2+9*3=50
# 7*4+8*5+9*6=122
# 7*4+8*5+9*6=122

# 10*1+11*2+12*3=68
# 10*1+11*2+12*3=68
# 10*4+11*5+12*6=167
# 10*4+11*5+12*6=167

# a2_b
# print(a2.shape) # (1, 2, 3)
# print(b.shape) # (2, 3, 2)
# a2_b = np.dot(a2,b)
# print(a2_b.shape) # (1, 2, 2, 2)
# print(a2_b)
# [[[[14 14]
#    [32 32]]

#   [[32 32]
#    [77 77]]]]

# a3_b
# print(a3.shape) # (3, 1, 3)
# print(b.shape) # (2, 3, 2)
# a3_b = np.dot(a3,b)
# print(a3_b.shape) # (3, 1, 2, 2)
# print(a3_b)
# [[[[ 14  14]
#    [ 32  32]]]


#  [[[ 32  32]
#    [ 77  77]]]


#  [[[ 50  50]
#    [122 122]]]]

# a_b1
# print(a.shape) # (2, 2, 3)
# print(b1.shape) # (3, 2, 3, 2)
# a_b1 = np.dot(a, b1)
# print(a_b1.shape) # (2, 2, 3, 2, 2)
# print(a_b1)
# [[[[[ 14  14]
#     [ 32  32]]

#    [[ 14  14]
#     [ 32  32]]

#    [[ 14  14]
#     [ 32  32]]]


#   [[[ 32  32]
#     [ 77  77]]

#    [[ 32  32]
#     [ 77  77]]

#    [[ 32  32]
#     [ 77  77]]]]



#  [[[[ 50  50]
#     [122 122]]

#    [[ 50  50]
#     [122 122]]

#    [[ 50  50]
#     [122 122]]]


#   [[[ 68  68]
#     [167 167]]

#    [[ 68  68]
#     [167 167]]

#    [[ 68  68]
#     [167 167]]]]]

# a1_b
# print(a1.shape) # (2, 2, 2, 3)
# print(b.shape) # (2, 3, 2)
# a1_b = np.dot(a1,b)
# print(a1_b.shape) # (2, 2, 2, 2, 2)
# print(a1_b)
# [[[[[ 14  14]
#     [ 32  32]]

#    [[ 32  32]
#     [ 77  77]]]


#   [[[ 50  50]
#     [122 122]]

#    [[ 68  68]
#     [167 167]]]]



#  [[[[ 14  14]
#     [ 32  32]]

#    [[ 32  32]
#     [ 77  77]]]


#   [[[ 50  50]
#     [122 122]]

#    [[ 68  68]
#     [167 167]]]]]


# 以上数组两边都是三维及以上，有点麻烦，但能敲出来------------------------------


# 情况7（实验奇葩情况）
# a = np.array([1, 2, 3])
# b = np.array([
#     [1, 2, 3],
# ])
# c = np.array([
#     [1],
#     [2],
#     [3]
# ])
# print(np.dot(a, b)) # 报错，执行不了，幸好执行不了，要不就不好写

# print(np.dot(a,c))
# [14]

# 左（主），右（从）
# 左（行），右（列）
# 通过这几个例子发现，高维数组（三维及以上），的运算方式，是有规律可循的，能用手敲出来。
# 下一步，整理例子，找规律

# np.dot实现大致步骤，分为两步
# 第一步，获取两个矩阵运算后 结果的数据形状，然后根据结果形状，生成一个空白数组
# 第二步，把两个矩阵里 行 列，按照运算顺序分别取出来，放到一个一维的数组里，然后按顺序运算
# 第三步，将运算结果放入空白数组
# 第四步，返回结果
